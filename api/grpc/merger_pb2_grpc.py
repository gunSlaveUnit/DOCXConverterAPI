# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import merger_pb2 as merger__pb2


class MergerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Merge = channel.unary_unary(
            '/merger.Merger/Merge',
            request_serializer=merger__pb2.MergeRequest.SerializeToString,
            response_deserializer=merger__pb2.MergeResponse.FromString,
        )


class MergerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Merge(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MergerServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'Merge': grpc.unary_unary_rpc_method_handler(
            servicer.Merge,
            request_deserializer=merger__pb2.MergeRequest.FromString,
            response_serializer=merger__pb2.MergeResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'merger.Merger', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class Merger(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Merge(request,
              target,
              options=(),
              channel_credentials=None,
              call_credentials=None,
              insecure=False,
              compression=None,
              wait_for_ready=None,
              timeout=None,
              metadata=None):
        return grpc.experimental.unary_unary(request, target, '/merger.Merger/Merge',
                                             merger__pb2.MergeRequest.SerializeToString,
                                             merger__pb2.MergeResponse.FromString,
                                             options, channel_credentials,
                                             insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
